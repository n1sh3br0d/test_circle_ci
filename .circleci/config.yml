# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:10

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm i

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      # - run: npm run test
      # - run: touch daemon.json
      # - run: echo '{ "insecure-registries":["$REGISTRY_URL"] }' >> daemon.json
      # - run: sudo mkdir /etc/docker && sudo cp ./daemon.json /etc/docker/
      #- run: sudo usermod -aG docker $USER
      #- run: sudo apk add docker -y &&
      - run: export DOCKER_TLS_VERIFY=0
      - setup_remote_docker
      # - run: sudo service --status-all
      - run: sudo echo "Hello world"

      - deploy:
          name: Build and push Docker image
          command: |
            # touch cert.pem && touch key.pem && touch ca.pem
            # echo $DOCKER_AMAZON_CERT >> cert.pem && echo $DOCKER_AMAZON_KEY >> key.pem && echo $DOCKER_AMAZON_CA >> ca.pem
            TAG="0.0.${CIRCLE_BUILD_NUM}"
            docker build -t $REGISTRY_URL/$COMPTIA_PROJECT:$TAG .
            touch ca.crt
            echo $DOCKER_AMAZON_CA >> ca.crt
            sudo mkdir -p /etc/docker/certs.d/$REGISTRY_URL:5000/
            sudo cp ca.crt /etc/docker/certs.d/$REGISTRY_URL:5000/ca.crt
            docker login  -u $DOCKER_LOGIN -p $DOCKER_PASSWORD $REGISTRY_URL
            docker push $REGISTRY_URL/$COMPTIA_PROJECT:$TAG
# --tlsverify=true --tlscacert=ca.pem --tlscert=cert.pem --tlskey=key.pem
