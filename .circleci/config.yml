# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:10

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: npm i

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm run test
      - run: sudo apt-get install apt-utils -y
      - run:
          name: Install Docker client
          command: |
            set -x
            VER="17.03.0-ce"
            curl -fsSL https://get.docker.com -o get-docker.sh
            sudo sh get-docker.sh
      # This should go into custom primary image, here's only for the sake of explanation
      - run:
          name: Install Docker Compose
          command: |
            set -x
            curl -L https://github.com/docker/compose/releases/download/1.11.2/docker-compose-`uname -s`-`uname -m` > /tmp/docker-compose
            sudo mv /tmp/docker-compose /usr/local/bin/docker-compose
            sudo chmod +x /usr/local/bin/docker-compose

      - run: touch daemon.json
      - run: echo '{ "insecure-registries":["$REGISTRY_URL"] }' >> daemon.json
      - run: sudo mkdir /etc/docker && sudo cp ./daemon.json /etc/docker/
      #- run: sudo usermod -aG docker $USER
      #- run: sudo apk add docker -y &&
      #- setup_remote_docker
      - run: sudo service docker status
      - run: sudo echo "Hello world"

      - deploy:
          name: Build and push Docker image
          command: |
            touch comptia.cert && touch comptia.key
            echo $DOCKER_AMAZON_CERT >> comptia.cert && echo $DOCKER_AMAZON_KEY >> comptia.key
            TAG="0.0.${CIRCLE_BUILD_NUM}"
            sudo docker build -t $REGISTRY_URL/$COMPTIA_PROJECT:$TAG .
            sudo docker login --tlscert ./comptia.cert --tlskey ./comptia.key --tlsverify=false -u $DOCKER_LOGIN -p $DOCKER_PASSWORD $REGISTRY_URL
            sudo docker push $REGISTRY_URL/$COMPTIA_PROJECT:$TAG
        #

